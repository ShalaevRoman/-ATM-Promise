let userData = {
  'USD': 1000,
  'EUR': 900,
  'UAH': 15000,
  'BIF': 20000,
  'AOA': 100
},
bankData = {
  'USD': {
    max: 3000,
    min: 100,
    img: 'üíµ'
  },
  'EUR': {
    max: 1000,
    min: 50,
    img: 'üí∂'
  },
  'UAH': {
    max: 0,
    min: 0,
    img: 'üí¥'
  },
  'GBP': {
    max: 10000,
    min: 100,
    img: 'üí∑'
  }
}

const KEYS = {};
const BANKKEYS = {};
const getMoney = (userData, bankData) => {
  return new Promise((resolve, reject) => {
    confirm('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å –Ω–∞ –∫–∞—Ä—Ç–µ?') ? resolve(userData) : reject({userData: userData, bankData: bankData})
  })
};

for(let key in userData) {
  KEYS[key] = key; 
};

for (let key in bankData) {
  BANKKEYS[key] = key;
}

getMoney(userData, bankData)
.then(
  function(userData){
    let userChoiceBalance;
    do {
      userChoiceBalance = prompt(`–í–≤–µ–¥–∏—Ç–µ –¥–æ–ø—É—Å—Ç–∏–º—É—é –≤–∞–ª—é—Ç—É, –≤ —Ñ–æ—Ä–º–∞—Ç–µ: USD, EUR, UAH, BIF, AOA`);
      if (userChoiceBalance) {
        userChoiceBalance.toUpperCase();
      }
    }while(userChoiceBalance !== KEYS[userChoiceBalance]);
    console.log(userChoiceBalance)
    console.log(`–ë–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: ${userData[userChoiceBalance]} ${KEYS[userChoiceBalance]}`);
    console.log(`–°–ø–∞—Å–∏–±–æ, —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—èü§ó!)))`)
  },
  
  function(reject) {
    let userChoiceCash;
    let userChoiseNumber;
    do {
      userChoiceCash = prompt(`–í–≤–µ–¥–∏—Ç–µ –¥–æ–ø—É—Å—Ç–∏–º—É—é –≤–∞–ª—é—Ç—É, –≤ —Ñ–æ—Ä–º–∞—Ç–µ: USD, EUR, UAH, BIF, AOA`);
      if (userChoiceCash) {
        userChoiceCash.toUpperCase();
      }
    } while(userChoiceCash !== KEYS[userChoiceCash] || userChoiceCash !== BANKKEYS[userChoiceCash]);
     
    userChoiseNumber = prompt(`–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é –∂–µ–ª–∞–µ—Ç–µ —Å–Ω—è—Ç—å:`);

    if (userChoiseNumber > reject.bankData[userChoiceCash].max) {
      console.log(`–í–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞ –±–æ–ª—å—à–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–π.`)
      console.log(`–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å–Ω—è—Ç–∏—è:${reject.bankData[userChoiceCash].max}${reject.bankData[userChoiceCash].img}`)
      console.log(`–°–ø–∞—Å–∏–±–æ, —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—èü§ó!)))`)
      return
    };
     if(userChoiseNumber < reject.bankData[userChoiceCash].min) {
      console.log(`–í–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞ –º–µ–Ω—å—à–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–π.`)
      console.log(`–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å–Ω—è—Ç–∏—è:${reject.bankData[userChoiceCash].min}${reject.bankData[userChoiceCash].img}`)
      console.log(`–°–ø–∞—Å–∏–±–æ, —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—èü§ó!)))`)
      return
    };
      console.log(`–í–æ—Ç –í–∞—à–∏ –¥–µ–Ω–µ–∂–∫–∏ ${userChoiseNumber}${userChoiceCash}${reject.bankData[userChoiceCash].img}`)
      console.log(`–°–ø–∞—Å–∏–±–æ, —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—èü§ó!)))`)
  }
)